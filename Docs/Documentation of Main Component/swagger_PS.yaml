swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:9000'
basePath: /
tags:
  - name: app-controller
    description: App Controller
  - name: auth-controller
    description: Auth Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: event-controller
    description: Event Controller
  - name: history-controller
    description: History Controller
  - name: sincro-event-controller
    description: Sincro Event Controller
  - name: vehicle-controller
    description: Vehicle Controller
paths:
  /:
    get:
      tags:
        - app-controller
      summary: getHomePage
      operationId: getHomePageUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/sincro/event:
    post:
      tags:
        - sincro-event-controller
      summary: addEvent
      operationId: addEventUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: event
          description: event
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Event'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - sincro-event-controller
      summary: updateEvent
      operationId: updateEventUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: event
          description: event
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /event:
    put:
      tags:
        - event-controller
      summary: updateEvent
      operationId: updateEventUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: event
          description: event
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /event/payment:
    post:
      tags:
        - event-controller
      summary: payEvent
      operationId: payEventUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: event
          description: event
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Event'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /history:
    get:
      tags:
        - history-controller
      summary: getHistory
      operationId: getHistoryUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/History'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /login:
    post:
      tags:
        - auth-controller
      summary: loginUser
      operationId: loginUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthenticatedUser'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /register:
    post:
      tags:
        - auth-controller
      summary: createNewUser
      operationId: createNewUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthenticatedUser'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user:
    post:
      tags:
        - app-controller
      summary: addUser
      operationId: addUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/event:
    post:
      tags:
        - event-controller
      summary: getEvent
      operationId: getEventUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/{email}':
    get:
      tags:
        - app-controller
      summary: getUserByEmail
      operationId: getUserByEmailUsingGET
      produces:
        - '*/*'
      parameters:
        - name: email
          in: path
          description: email
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /validate:
    get:
      tags:
        - auth-controller
      summary: validateToken
      operationId: validateTokenUsingGET
      produces:
        - '*/*'
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/:
    get:
      tags:
        - vehicle-controller
      summary: getUserVehicles
      operationId: getUserVehiclesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Vehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/borrow/requests:
    get:
      tags:
        - vehicle-controller
      summary: getBorrowRequests
      operationId: getBorrowRequestsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DelegateRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/borrowing:
    get:
      tags:
        - vehicle-controller
      summary: getBorrowingVehicles
      operationId: getBorrowingVehiclesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DelegatedVehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/delegate:
    post:
      tags:
        - vehicle-controller
      summary: delegatePlate
      operationId: delegatePlateUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/DelegateRequest'
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/delegate/requests:
    get:
      tags:
        - vehicle-controller
      summary: getDelegateRequests
      operationId: getDelegateRequestsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DelegateRequest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/delegate/response:
    post:
      tags:
        - vehicle-controller
      summary: handleDelegation
      operationId: handleDelegationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: delegateResponse
          description: delegateResponse
          required: true
          schema:
            $ref: '#/definitions/DelegateResponse'
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vehicles/delegate/{vehicleId}/request/cancel':
    post:
      tags:
        - vehicle-controller
      summary: cancelDelegationRequest
      operationId: cancelDelegationRequestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: vehicleId
          in: path
          description: vehicleId
          required: true
          type: string
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/delegated:
    get:
      tags:
        - vehicle-controller
      summary: getDelegatedVehicles
      operationId: getDelegatedVehiclesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Vehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vehicles/delegated/{vehicleId}/cancel':
    post:
      tags:
        - vehicle-controller
      summary: cancelDelegation
      operationId: cancelDelegationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: vehicleId
          in: path
          description: vehicleId
          required: true
          type: string
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/subscribe:
    post:
      tags:
        - vehicle-controller
      summary: subscribeVehicle
      operationId: subscribeVehicleUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: vehicle
          description: vehicle
          required: true
          schema:
            $ref: '#/definitions/Vehicle'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vehicles/subscribed/:
    get:
      tags:
        - vehicle-controller
      summary: getSubscribedVehicles
      operationId: getSubscribedVehiclesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Vehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vehicles/{vehicleId}/info':
    get:
      tags:
        - vehicle-controller
      summary: getVehicle
      operationId: getVehicleUsingGET
      produces:
        - '*/*'
      parameters:
        - name: vehicleId
          in: path
          description: vehicleId
          required: true
          type: string
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Vehicle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/vehicles/{vehicleId}/unsubscribe':
    post:
      tags:
        - vehicle-controller
      summary: unsubscribeVehicle
      operationId: unsubscribeVehicleUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: vehicleId
          in: path
          description: vehicleId
          required: true
          type: string
        - name: auth
          in: query
          description: auth
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  AuthenticatedUser:
    type: object
    required:
      - token
      - user
    properties:
      token:
        $ref: '#/definitions/Token'
      user:
        $ref: '#/definitions/User'
    title: AuthenticatedUser
  DelegateRequest:
    type: object
    required:
      - plate
    properties:
      id:
        type: integer
        format: int32
      ownerId:
        type: integer
        format: int32
      plate:
        type: string
      userBorrowId:
        type: integer
        format: int32
    title: DelegateRequest
  DelegateResponse:
    type: object
    required:
      - plate
    properties:
      accept:
        type: boolean
      plate:
        type: string
      requestId:
        type: integer
        format: int32
      userBorrowId:
        type: integer
        format: int32
    title: DelegateResponse
  DelegatedVehicle:
    type: object
    required:
      - id
      - plate
      - userBorrowId
    properties:
      id:
        type: integer
        format: int32
      plate:
        type: string
      userBorrowId:
        type: integer
        format: int32
    title: DelegatedVehicle
  Event:
    type: object
    required:
      - date
      - gpsLatitude
      - gpsLongitude
      - location
      - plate
      - state
    properties:
      date:
        type: string
        format: date-time
      driverId:
        type: integer
        format: int32
      gpsLatitude:
        type: string
      gpsLongitude:
        type: string
      id:
        type: integer
        format: int32
      location:
        type: string
      plate:
        type: string
      state:
        type: string
      verified:
        type: boolean
    title: Event
  History:
    type: object
    required:
      - actionId
      - date
      - driverId
      - id
      - state
    properties:
      actionId:
        type: string
      date:
        type: string
        format: date-time
      driverId:
        type: integer
        format: int32
      id:
        type: integer
        format: int32
      state:
        type: string
    title: History
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Token:
    type: object
    required:
      - access_token
      - expires_in
      - id_token
      - scope
      - token_type
    properties:
      access_token:
        type: string
      expires_in:
        type: string
      id_token:
        type: string
      scope:
        type: string
      token_type:
        type: string
    title: Token
  User:
    type: object
    required:
      - email
      - name
      - password
    properties:
      email:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      password:
        type: string
      playerId:
        type: string
    title: User
  Vehicle:
    type: object
    required:
      - delegateState
      - ownerId
      - plate
      - registryDate
      - subscribed
    properties:
      delegateState:
        type: string
      ownerId:
        type: integer
        format: int32
      plate:
        type: string
      registryDate:
        type: string
        format: date-time
      subscribed:
        type: boolean
    title: Vehicle
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
